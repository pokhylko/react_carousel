{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","translate","moveRight","props","images","itemWidth","step","frameSize","infinite","maxPosition","length","position","nextItem","splice","push","setState","moveLeft","prevItem","unshift","this","animationDuration","changeStep","changeWidth","changeFrame","changeAnimation","changeInfinite","containerWidth","className","style","width","transition","transform","marginLeft","map","image","key","src","alt","type","onClick","htmlFor","id","min","max","value","onChange","checked","React","Component","defaultProps","App","e","target","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d7bfebf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    translate: 0,\n  }\n\n  moveRight = () => {\n    const { images, itemWidth, step, frameSize, infinite } = this.props;\n    const { translate } = this.state;\n    const maxPosition = images.length * itemWidth - frameSize * itemWidth;\n    let position = translate;\n\n    position -= itemWidth * step;\n\n    if (infinite) {\n      const nextItem = images.splice(0, step);\n\n      images.push(...nextItem);\n    }\n\n    if (-position > maxPosition && !infinite) {\n      position = -maxPosition;\n    }\n\n    this.setState({ translate: position });\n  };\n\n  moveLeft = () => {\n    const { images, itemWidth, step, infinite } = this.props;\n    const { translate } = this.state;\n    const minPosition = 0;\n    let position = translate;\n\n    position += itemWidth * step;\n\n    if (infinite) {\n      const prevItem = images.splice(-step);\n\n      images.unshift(...prevItem);\n    }\n\n    if (position > minPosition && !infinite) {\n      position = minPosition;\n    }\n\n    this.setState({ translate: position });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      animationDuration,\n      infinite,\n      changeStep,\n      changeWidth,\n      changeFrame,\n      changeAnimation,\n      changeInfinite,\n    } = this.props;\n\n    const { translate } = this.state;\n    const containerWidth = itemWidth * frameSize;\n\n    return (\n      <>\n        <div className=\"section-carousel\">\n          <div\n            className=\"Carousel\"\n            style={{\n              width: `${containerWidth}px`,\n            }}\n          >\n            <ul\n              className=\"Carousel__list\"\n              style={{\n                transition: `transform ${animationDuration}ms`,\n                transform: `translateX(${translate}px)`,\n                marginLeft: `${infinite ? -translate - itemWidth * step : 0}px`,\n              }}\n            >\n              {images.map(image => (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={image}\n                    style={{ width: `${itemWidth}px` }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <button\n            className=\"button button--prev\"\n            type=\"button\"\n            onClick={this.moveLeft}\n          >\n            Prev\n          </button>\n          <button\n            className=\"button button--next\"\n            type=\"button\"\n            onClick={this.moveRight}\n          >\n            Next\n          </button>\n        </div>\n\n        <div className=\"controllers\">\n          <div className=\"item-width\">\n            <label htmlFor=\"width\">Image width:</label>\n            <input\n              id=\"width\"\n              type=\"range\"\n              min=\"50\"\n              max=\"130\"\n              value={itemWidth}\n              onChange={changeWidth}\n            />\n          </div>\n          <div className=\"step\">\n            <label htmlFor=\"step\">Step:</label>\n            <input\n              id=\"step\"\n              type=\"range\"\n              min=\"1\"\n              max=\"5\"\n              value={step}\n              onChange={changeStep}\n            />\n          </div>\n          <div className=\"frame\">\n            <label htmlFor=\"frame\">Frame:</label>\n            <input\n              id=\"frame\"\n              type=\"range\"\n              min=\"1\"\n              max=\"5\"\n              value={frameSize}\n              onChange={changeFrame}\n            />\n          </div>\n          <div className=\"animation\">\n            <label htmlFor=\"animation\">Animation:</label>\n            <input\n              id=\"animation\"\n              type=\"range\"\n              min=\"0\"\n              max=\"3000\"\n              step=\"250\"\n              value={animationDuration}\n              onChange={changeAnimation}\n            />\n          </div>\n          <div className=\"infinite\">\n            <label htmlFor=\"infinite\">Infinite:</label>\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={changeInfinite}\n            />\n            <span className=\"slider round\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string),\n  itemWidth: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  changeStep: PropTypes.func.isRequired,\n  changeWidth: PropTypes.func.isRequired,\n  changeFrame: PropTypes.func.isRequired,\n  changeAnimation: PropTypes.func.isRequired,\n  changeInfinite: PropTypes.func.isRequired,\n};\n\nCarousel.defaultProps = {\n  images: [],\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    step: 3,\n    frameSize: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeWidth = (e) => {\n    this.setState({ itemWidth: +e.target.value });\n  }\n\n  changeStep = (e) => {\n    this.setState({ step: +e.target.value });\n  }\n\n  changeFrame = (e) => {\n    this.setState({ frameSize: +e.target.value });\n  }\n\n  changeAnimation = (e) => {\n    this.setState({ animationDuration: +e.target.value });\n  }\n\n  changeInfinite = (e) => {\n    this.setState(prev => ({ infinite: !prev.infinite }));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"App\">\n            <Carousel\n              {...this.state}\n              changeStep={this.changeStep}\n              changeWidth={this.changeWidth}\n              changeFrame={this.changeFrame}\n              changeAnimation={this.changeAnimation}\n              changeInfinite={this.changeInfinite}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}